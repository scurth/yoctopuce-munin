#!/usr/bin/python
#
# Author: Sascha Curth
#
import urllib
import json
import sys
import os

scriptname=os.path.basename(__file__)
parts=scriptname.partition('_')

if len(sys.argv) == 2 and sys.argv[1] == "autoconf":
    #Magic markers for munin autoconf
    #%# family=auto
    #%# capabilities=autoconf suggest
    print "yes"
elif len(sys.argv) == 2 and sys.argv[1] == "suggest":
    url = 'http://127.0.0.1:4444/api.json'
    response = urllib.urlopen(url);
    data = json.loads(response.read())
    for key in data["services"]["yellowPages"]["Temperature"]:
        if "PT100MK1" in key["hardwareId"]:
            serial=key["hardwareId"].partition('-')[2].partition('.')[0]
            print "%s" % serial

elif len(sys.argv) == 2 and sys.argv[1] == "config":
    url = 'http://127.0.0.1:4444/bySerial/%s-%s/api.json' % (parts[0],parts[2])
    response = urllib.urlopen(url);
    data = json.loads(response.read())
    print 'graph_title %s temperature measurement' % scriptname
    print 'graph_vlabel temperature in %s' % data["temperature"]["unit"]
    print 'graph_category yoctopuce'
    print 'graph_args --base 1000'

    print 'temp.label %s' % data["temperature"]["unit"]
    print 'temp.draw AREA'
    print 'temp.type GAUGE'

else:
    url = 'http://127.0.0.1:4444/bySerial/%s-%s/api.json' % (parts[0],parts[2])
    response = urllib.urlopen(url);
    data = json.loads(response.read())
    print 'temp.value %s' % data["temperature"]["advertisedValue"]

