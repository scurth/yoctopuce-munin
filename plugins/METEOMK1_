#!/usr/bin/python
#
# Author: Sascha Curth
#
import urllib
import json
import sys
import os

# Set warning / critials
# [METEOMK1_*]
#  env.temperature_warning 23
#  env.temperature_critical 27
#  env.humidity_warning 60
#  env.humidity_critical 70
#  env.pressure_critical 1100
#  env.pressure_warning 1200

apiuri='http://127.0.0.1:4444'
scriptname=os.path.basename(__file__)
modulename=scriptname.partition('_')[0]
serial=scriptname.partition('_')[2].partition('_')[0]
category=scriptname.partition('_')[2].partition('_')[2]

def initDeviceinfo():
    deviceurl = '%s/bySerial/%s-%s/api.json' % (apiuri,modulename,serial)
    deviceresponse = urllib.urlopen(deviceurl);
    devicedata = json.loads(deviceresponse.read())
    return devicedata

if len(sys.argv) == 2 and sys.argv[1] == "autoconf":
    #Magic markers for munin autoconf
    #%# family=auto
    #%# capabilities=autoconf suggest
    print "yes"

elif len(sys.argv) == 2 and sys.argv[1] == "suggest":
    huburl = '%s/api.json' % apiuri
    hubresponse = urllib.urlopen(huburl);
    hubdata = json.loads(hubresponse.read())
    for key in hubdata["services"]["yellowPages"]["Temperature"]:
        if "METEOMK1" in key["hardwareId"]:
            serial=key["hardwareId"].partition('-')[2]
            print "%s" % serial
    for key in hubdata["services"]["yellowPages"]["Pressure"]:
        if "METEOMK1" in key["hardwareId"]:
            serial=key["hardwareId"].partition('-')[2]
            print "%s" % serial
    for key in hubdata["services"]["yellowPages"]["Humidity"]:
        if "METEOMK1" in key["hardwareId"]:
            serial=key["hardwareId"].partition('-')[2]
            print "%s" % serial

elif len(sys.argv) == 2 and sys.argv[1] == "config":
    devicedata=initDeviceinfo()
    logicalname=devicedata["module"]["logicalName"]
    print 'graph_title %s %s' % (scriptname,logicalname)
    print 'graph_vlabel %s in %s' % (category, devicedata[category]["unit"])
    print 'graph_category yoctopuce'

    print '%s.label %s' % (category,devicedata[category]["unit"])
    print '%s.draw LINE1' % category
    print '%s.type GAUGE' % category
    varname="%s_warning" % category
    print '%s.warning %s' % (category,os.environ.get(varname))
    varname="%s_critical" % category
    print '%s.critical %s' % (category,os.environ.get(varname))
else:
    devicedata=initDeviceinfo()
    print '%s.value %s' % (category,devicedata[category]["advertisedValue"])
